#+TITLE: Mobile Gallery Gap Investigation
#+DATE: 2025-10-22

* Problem
- On mobile viewports (≤768px) the main gallery still shows intermittent vertical gaps between certain images despite the desired one-photo-per-row layout.
- Reproduced in Safari and Chrome device simulators at ~http://localhost:4321/~ after hard refresh.

* Observations
- First and second photos often display extra white space beneath them, while later items stack flush, suggesting inconsistent inline styles per element.
- DOM inspection shows some anchors retain absolute positioning inline styles (e.g., `top`, `left`) even after switching to the mobile stack.
- Resizing from desktop to mobile and loading directly on mobile both show the issue, implying script logic affects initial render as well.

* Hypotheses
- Debounced resize handler may re-run justified layout after mobile layout applies, reintroducing absolute positioning on select nodes.
- GLightbox initialization might clone nodes and restore previous styles, leaving residual gaps.
- Astro hydration timing could mean the flex stack runs before image load completes, and subsequent layout pass reverts to justified spacing for a subset of images.

* Attempts
1. Lowered justified-layout `boxSpacing` on narrow viewports (2px) to minimize gutters. → No noticeable change; gaps persisted.
2. Added mobile-only branch to bypass justified layout and stack anchors with `flex` container and uniform image dimensions. → Improved consistency but gaps still appear after certain items.
3. Forced container style resets when returning to desktop mode to avoid leftover flex properties. → Desktop fine; mobile gaps remain.

* Status
- Issue unresolved. Need deeper inspection of resize/init order and GLightbox side effects before next iteration.

* Root Cause Analysis (2025-10-22)

** Identified Issues
1. *Breakpoint Mismatch*: Mobile fallback triggers at ≤480px (packeryGallery.ts:44, 70), but gaps appear at ≤768px viewports. Between 481-768px, Packery still runs with absolute positioning.

2. *No Resize Handler for Layout Switching*: Initial layout check happens once in onReady() (line 62). Packery has resize: true (line 84), but no logic exists to switch from Packery → mobile fallback when crossing the breakpoint. When resizing from desktop → tablet → mobile, Packery keeps running until 480px.

3. *Absolute Positioning Persistence*: Packery applies inline styles (position: absolute; left: Xpx; top: Ypx). Mobile fallback tries to reset these (lines 316-334), but lacks !important flags. Race condition: if Packery's resize handler fires after mobile fallback setup, it reapplies absolute positioning.

4. *Multiple Gallery Scripts*: Two gallery implementations found (packeryGallery.ts and photo-grid.ts), both with resize handlers that could conflict.

** Proposed Solution (Robust)
1. Increase mobile breakpoint from 480px → 768px
2. Add resize handler to detect breakpoint crossing and switch layouts
3. Destroy Packery instance before applying mobile fallback
4. Disable Packery's built-in resize (resize: false) and handle manually
5. Debounce resize handler to prevent excessive recalculations

** Alternative Solution (Simple)
1. Increase breakpoint to 768px
2. Add !important flags to all mobile style resets in setupMobileFallback()

** Implementation Plan
- Proceed with robust solution for better maintainability
- Add resize listener that properly destroys/reinits layouts
- Test on physical devices across 480px, 768px, 1024px breakpoints
