---
import MainLayout from '../../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';
import ImageCard from '@jaydixit/astro-utils/components/Image.astro';
import { smartQuotes } from '@jaydixit/astro-utils';
import { cldUrl } from '../../lib/cloudinary';

export async function getStaticPaths() {
  const posts = await getCollection('blog', (entry) => !entry.data.draft);
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
const data = post.data;
const publishDate = data.publishDate ? new Date(data.publishDate) : undefined;
const formattedDate = publishDate
  ? publishDate.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  : null;
const heroImage = data.imagePublicId ? cldUrl(data.imagePublicId, 1600) : data.image ?? null;
const excerpt = data.excerpt ? smartQuotes(data.excerpt) : null;
---

<MainLayout title={data.title} description={data.excerpt}>
  <article class="mx-auto max-w-3xl px-6 pb-24 pt-36 md:pt-48">
    {heroImage && (
      <figure class="relative mb-12 overflow-hidden rounded-[2.5rem] bg-slate-100 shadow-[0_25px_70px_-30px_rgba(15,23,42,0.35)]">
        <ImageCard
          src={heroImage}
          alt={data.imageAlt ?? data.title}
          width={1600}
          height={1067}
          class="h-full w-full object-cover"
        />
      </figure>
    )}

    <header class="mb-12 space-y-4 text-center">
      <p class="text-xs uppercase tracking-[0.35em] text-slate-400">Essay</p>
      <h1 class="text-4xl font-semibold tracking-tight text-slate-900 sm:text-5xl">{data.title}</h1>
      {formattedDate && (
        <time datetime={publishDate?.toISOString()} class="block text-sm uppercase tracking-[0.3em] text-slate-500">
          {formattedDate}
        </time>
      )}
      {data.tags && (
        <ul class="flex flex-wrap justify-center gap-3 text-xs uppercase tracking-[0.2em] text-slate-500">
          {data.tags.map((tag) => (
            <li class="rounded-full border border-slate-200 px-4 py-1">{tag}</li>
          ))}
        </ul>
      )}
      {excerpt && (
        <p class="mx-auto max-w-2xl text-base leading-relaxed text-slate-600 sm:text-lg">
          {excerpt}
        </p>
      )}
    </header>

    <div class="prose prose-lg prose-slate mx-auto max-w-none">
      <Content />
    </div>
  </article>
</MainLayout>
