#+TITLE: Daily Handoff Notes
#+DATE: 2025-10-19

* 2025-10-22
** Summary
- RESOLVED mobile gallery gaps issue
- Root cause: CSS specificity war - desktop styles (position: absolute, aspect-ratio) had no media query overrides
- JavaScript fixes (resize handlers, destroying Packery) were red herrings
- Actual solution: Added CSS media query with !important overrides at â‰¤768px in src/pages/index.astro
- Key insight: CSS rules persist continuously; JavaScript inline styles are one-time snapshots
- Full debugging journey and lessons captured in docs/debug/mobile-gallery-gaps.org and docs/codebase-wisdom.org

** Commits
- 147d1eb: Document actual root cause (CSS specificity war)
- 6ece74e: Add CSS media query fix
- Earlier commits: JavaScript improvements (still useful for resize handling)

** Lessons Learned
1. Check CSS computed styles FIRST before diving into JavaScript debugging
2. Responsive layout changes belong in CSS media queries, not JavaScript
3. Use "Computed" tab in DevTools, not just "Styles" or inline attributes
4. Test at all breakpoints before considering features "done"

** Status
- Issue fully resolved and tested
- All documentation updated
- Pattern documented for future responsive layout work

* 2025-10-19
** Summary
- Highlight pipeline now uses Astro-managed responsive variants; verified with build on main.
- ESLint configuration stabilized; `npm run lint` and `npm run build` both succeed.

** Next Steps
1. Replace `salient-portfolio.js` with native Astro/Tailwind components to retire lint exceptions.
2. Refactor Node CLI scripts to typed ES modules and re-enable stricter linting rules.
3. Extend responsive image pipeline to gallery routes for consistent load performance.

** Status
- All work committed and pushed to `main`.
- Ready for pick-up on the follow-up tasks above.
